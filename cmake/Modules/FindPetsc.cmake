FIND_PATH(
  PETSC_INCLUDE_DIR
  NAMES petsc.h
  PATHS /usr/include/petsc/
  $ENV{PETSC_DIR}/include
  )
FIND_PATH(
  PETSCCONF_INCLUDE_DIR
  NAMES petscconf.h
  PATHS /usr/include/petsc/ 
  $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/include
  )

# Check for version
IF (PETSC_INCLUDE_DIR)
  EXECUTE_PROCESS(COMMAND cat "${PETSC_INCLUDE_DIR}/petscversion.h" OUTPUT_VARIABLE PETSC_HEADER)
  STRING(REGEX MATCH "PETSC_VERSION_RELEASE *([0-9]+)" PETSC_VERSION_RELEASE ${PETSC_HEADER})
  STRING(REGEX REPLACE "PETSC_VERSION_RELEASE *([0-9]+)" "\\1" PETSC_VERSION_RELEASE "${PETSC_VERSION_RELEASE}")
  STRING(REGEX MATCH "PETSC_VERSION_MAJOR *([0-9]+)" PETSC_VERSION_MAJOR ${PETSC_HEADER})
  STRING(REGEX REPLACE "PETSC_VERSION_MAJOR *([0-9]+)" "\\1" PETSC_VERSION_MAJOR "${PETSC_VERSION_MAJOR}")
  STRING(REGEX MATCH "PETSC_VERSION_MINOR *([0-9]+)" PETSC_VERSION_MINOR ${PETSC_HEADER})
  STRING(REGEX REPLACE "PETSC_VERSION_MINOR *([0-9]+)" "\\1" PETSC_VERSION_MINOR "${PETSC_VERSION_MINOR}")
ENDIF(PETSC_INCLUDE_DIR)

# Add a better check when we need it (e.g. release is bumped)
IF(PETSC_VERSION_MINOR AND PETSC_VERSION_MINOR LESS 2)
  FIND_LIBRARY(PETSC_LIB_PETSC     petsc     PATHS /usr/lib $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/lib)
  FIND_LIBRARY(PETSC_LIB_PETSCDM   petscdm   PATHS /usr/lib $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/lib)
  FIND_LIBRARY(PETSC_LIB_PETSCVEC  petscvec  PATHS /usr/lib $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/lib)
  FIND_LIBRARY(PETSC_LIB_PETSCMAT  petscmat  PATHS /usr/lib $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/lib)
  FIND_LIBRARY(PETSC_LIB_PETSCKSP  petscksp  PATHS /usr/lib $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/lib)
  FIND_LIBRARY(PETSC_LIB_PETSCSNES petscsnes PATHS /usr/lib $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/lib)
  FIND_LIBRARY(PETSC_LIB_DL        dl PATHS /usr/lib)

  IF(PETSC_LIB_PETSC)
    SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_LIB_PETSC})
  ENDIF(PETSC_LIB_PETSC)

  IF(PETSC_LIB_PETSCDM)
    SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_LIB_PETSCDM})
  ENDIF(PETSC_LIB_PETSCDM)

  IF(PETSC_LIB_PETSCVEC)
    SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_LIB_PETSCVEC})
  ENDIF(PETSC_LIB_PETSCVEC)

  IF(PETSC_LIB_PETSCMAT)
    SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_LIB_PETSCMAT})
  ENDIF(PETSC_LIB_PETSCMAT)

  IF(PETSC_LIB_PETSCKSP)
    SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_LIB_PETSCKSP})
  ENDIF(PETSC_LIB_PETSCKSP)

  IF(PETSC_LIB_PETSCSNES)
    SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_LIB_PETSCSNES})
  ENDIF(PETSC_LIB_PETSCSNES)

  IF(PETSC_LIB_DL)
    SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_LIB_DL})
  ENDIF(PETSC_LIB_DL)

  exec_program("cat $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/conf/petscvariables | grep PACKAGES_LIBS | awk -F  ' = ' '{print $2}'" OUTPUT_VARIABLE PETSC_VARIABLES)
  SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_VARIABLES})

  exec_program("cat $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/conf/petscvariables | grep \"PCC_LINKER_LIBS =\"| awk -F  ' = ' '{print $2}'" OUTPUT_VARIABLE PETSC_VARIABLES)
  SET(PETSC_LIBRARIES ${PETSC_LIBRARIES} ${PETSC_VARIABLES})

  exec_program("cat $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/conf/petscvariables | grep MPI_INCLUDE | awk -F  '-I' '{print $2}'" OUTPUT_VARIABLE PETSC_VARIABLES)
  SET(PETSCCONF_INCLUDE_DIR ${PETSCCONF_INCLUDE_DIR} ${PETSC_VARIABLES})

  SET(PETSC_INCLUDES ${PETSC_INCLUDE_DIR} ${PETSCCONF_INCLUDE_DIR})
  MARK_AS_ADVANCED(PETSC_LIBRARIES PETSC_INCLUDES)
ENDIF(PETSC_VERSION_MINOR AND PETSC_VERSION_MINOR LESS 2)
IF(PETSC_VERSION_MINOR AND PETSC_VERSION_MINOR GREATER 1)
  INCLUDE($ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/conf/PETScConfig.cmake)
  FIND_LIBRARY(PETSC_LIB_PETSC     petsc  HINTS $ENV{PETSC_DIR}/$ENV{PETSC_ARCH}/lib)
  SET(PETSC_LIBRARIES ${PETSC_LIB_PETSC} ${PETSC_PACKAGE_LIBS})
  SET(PETSC_INCLUDES ${PETSC_INCLUDE_DIR} ${PETSCCONF_INCLUDE_DIR} ${PETSC_PACKAGE_INCLUDES})
  MARK_AS_ADVANCED(PETSC_LIBRARIES PETSC_INCLUDES)
ENDIF(PETSC_VERSION_MINOR AND PETSC_VERSION_MINOR GREATER 1)

INCLUDE(FindPackageHandleStandardArgs)
find_package_handle_standard_args(PETSC DEFAULT_MSG
                                  PETSC_INCLUDES PETSC_LIBRARIES)
